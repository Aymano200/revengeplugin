(function(p,c,i,s,t,x,v){"use strict";function M(e,o=2){if(!+e)return"0 Bytes";const r=1024,a=o<0?0:o,n=["Bytes","KB","MB","GB","TB"],d=Math.floor(Math.log(e)/Math.log(r));return`${parseFloat((e/Math.pow(r,d)).toFixed(a))} ${n[d]}`}const{NativeModules:u}=i.ReactNative;u.NativeFileModule??u.RTNFileManager??u.DCDFileManager;async function m(e){try{console.log("[CatboxUploader] Media object:",e);const o=e?.item?.originalUri||e?.uri||e?.fileUri||e?.path||e?.sourceURL;if(!o)throw new Error("Missing file URI");const r=t.storage.userhash?.trim(),a=new FormData;a.append("reqtype","fileupload"),r&&a.append("userhash",r),a.append("fileToUpload",{uri:o,name:e.filename??"upload",type:e.mimeType??"application/octet-stream"});const n=await(await fetch("https://catbox.moe/user/api.php",{method:"POST",body:a})).text();if(console.log("[CatboxUploader] Raw response:",n),!n.startsWith("https://"))throw new Error(n);return n}catch(o){return console.error("[CatboxUploader] Upload failed:",o),null}}const{FormInput:T,FormDivider:y,FormSwitchRow:w}=x.Forms;function g(){return v.useProxy(t.storage),React.createElement(i.ReactNative.ScrollView,{style:{flex:1}},React.createElement(T,{title:"Catbox Userhash",placeholder:"Required for uploads to user account",value:t.storage.userhash||"",onChange:function(e){return t.storage.userhash=e.trim()},helpText:t.storage.userhash?null:React.createElement(i.ReactNative.Text,{style:{color:"#989898"}},"Optional")}),React.createElement(y,null),React.createElement(w,{label:"Always upload to Catbox",subLabel:"Ignore 10MB size limit",value:!!t.storage.alwaysUpload,onValueChange:function(e){t.storage.alwaysUpload=e}}),React.createElement(y,null),React.createElement(w,{label:"Show result link copy dialog",subLabel:"Uncheck to send link to chat automatically",value:!!t.storage.showDialogAfterUpload,onValueChange:function(e){t.storage.showDialogAfterUpload=e}}))}const h=c.findByProps("show","confirm","close"),f=c.findByProps("CloudUpload")?.CloudUpload,U=c.findByProps("sendMessage"),R=c.findByProps("getChannelId");let C=[];function E(){typeof t.storage.alwaysUpload!="boolean"&&(t.storage.alwaysUpload=!1),typeof t.storage.showDialogAfterUpload!="boolean"&&(t.storage.showDialogAfterUpload=!0)}function A(e=6){const o="abcdefghijklmnopqrstuvwxyz0123456789";let r="";for(let a=0;a<e;a++)r+=o.charAt(Math.floor(Math.random()*o.length));return r}function B(){const e=`warmup_${A()}.bin`,o=Math.floor(Math.random()*1048576)+1;return{uri:"data:application/octet-stream;base64,AA==",filename:e,mimeType:"application/octet-stream",preCompressionSize:o}}function D(){setTimeout(async function(){try{await m(B()),console.log("[CatboxUploader] Warm-up upload complete")}catch(e){console.warn("[CatboxUploader] Warm-up upload failed",e)}},0)}var S={onLoad(){E();const e=f.prototype.reactNativeCompressAndExtractData;f.prototype.reactNativeCompressAndExtractData=async function(){const o=this,r=!!t.storage.alwaysUpload,a=!!t.storage.showDialogAfterUpload,n=o?.preCompressionSize??0,d=M(n);if(!(r||n>10*1024*1024))return e.apply(this,arguments);s.showToast(`Uploading ${d} to Catbox...`);try{const l=await m(o);if(typeof this.setStatus=="function"&&(this.setStatus("CANCELED"),console.log("[CatboxUploader] Marked original upload as canceled.")),l)if(a)h.show({title:"Upload Successful",body:l,confirmText:"Copy Link",cancelText:"Close",confirmColor:"brand",onConfirm:function(){i.ReactNative.Clipboard.setString(l),s.showToast("Copied to clipboard!"),h.close()},onCancel:function(){return h.close()}});else{const b=R?.getChannelId?.();b&&U?.sendMessage?(await U.sendMessage(b,{content:l}),s.showToast("Sent link to chat.")):s.showToast("Upload succeeded, but could not send link.")}else s.showToast("Upload failed.")}catch(l){console.error("[CatboxUploader] Upload error:",l),s.showToast("Upload error occurred.")}return null},C.push(function(){f.prototype.reactNativeCompressAndExtractData=e}),D(),this.settings=g},onUnload(){C.forEach(function(e){return e()})},settings:g};return p.default=S,Object.defineProperty(p,"__esModule",{value:!0}),p})({},vendetta.metro,vendetta.metro.common,vendetta.ui.toasts,vendetta.plugin,vendetta.ui.components,vendetta.storage);
